OkCupid Browser is a Sinatra-based web application that runs locally and improves the browsing experience to okcupid.com.

Dependencies are minimal. As a user of this application you will need to install:
+ Sqlite3
+ Ruby 1.8.7+

Once you have these items install you can navigate to the /web directory and run

>> bundle install --path=vendor

I prefer to use the path=vendor component to localize the rubygems dependencies.

After this, you should run

>> bundle exec ruby lib/database.rb setup

This will create a new okcupid.db in the /db directory and then initialize it with the necessary tables that the
tool will use to store profile data for offline viewing.

Finally, you'll need to scrape some data from OkCupid to be able to view profiles. To do this, simply call:

>> bundle exec ruby lib/scraper.rb do_it_all okcupid_username okcupid_password

To view the results of the scraping you can launch the web app from the /web directory like so:

>> rackup

We had initially placed a username/password blocker in the application so that you could theoretically
cron job the scraper and just leave this app thing running on your local machine and access the web
portion from the outside world. To do this, you'll notice we don't care what password you enter
as long as you provide a username that is permitted by the database. Small security. 
Enhance and submit a pull request :) !
  ...
To make life easier, when you run the scraper on a username it will auto-add that username
to the registered_users table. But, should you want to let other usernames browse the site
you should add those manually.
-----------------

Setting the Environment variable SIN_VERBOSE to:
0 or 1: output debug
2: output database debug queries


# ************ Facial Recognition Resources **************
# http://jeffkreeftmeijer.com/2011/comparing-images-and-creating-image-diffs/
# http://scikit-learn.org/stable/auto_examples/applications/face_recognition.html#example-applications-face-recognition-py
# http://libface.sourceforge.net/file/Features.html
# http://www.cs.ucsb.edu/~mturk/Papers/mturk-CVPR91.pdf
# http://cvdazzle.com/ AWESOME ONE
# http://creatingwithcode.com/howto/face-detection-in-static-images-with-python/
#
# ************** FACIAL APIS
# http://www.kooaba.com/en/home/developers
# http://www.betafaceapi.com/
# http://face.com/
